import lazy_loader


__getattr__, __dir__, __all__ = lazy_loader.attach(
    __name__,
    submodules={
        'agent',
        'data',
        'fitting',
        'simulation',
        'utils',
    },
    submod_attrs={
        'agent': [
            'base_agent',
            'model',
        ],
        'data': [
            'fetch_choices_and_rewards',
            'get',
        ],
        'fitting': [
            'compute_aic',
            'compute_bic',
            'compute_waic',
            'cross_validation_score',
            'evaluate_hierarchical_model',
            'evaluate_joint_model',
            'evaluate_model',
            'evaluation',
            'evaluation_tools',
            'hierarchical',
            'hierarchical_train_model',
            'joint',
            'joint_train_model',
            'k_fold_split',
            'likelihood_ratio_test',
            'log_likelihood_experiment',
            'multi_start_hierarchical_train',
            'multi_start_joint_train',
            'multi_start_train',
            'negative_log_likelihood_experiment',
            'total_negative_log_likelihood',
            'total_negative_log_likelihood_multi_group',
            'total_nll_hierarchical',
            'train',
            'train_model',
        ],
        'simulation': [
            'parse',
            'parse_reward_matrix',
            'simulate',
            'simulate_dataset',
            'simulate_dataset_different_params',
            'simulate_dataset_jit',
            'simulate_dataset_jit_different_params',
            'simulate_experiment',
            'simulate_experiment_jit',
        ],
        'utils': [
            'plot_experiment_data',
            'plot_training_history',
            'plotting',
        ],
    },
)

__all__ = ['agent', 'base_agent', 'compute_aic', 'compute_bic', 'compute_waic',
           'cross_validation_score', 'data', 'evaluate_hierarchical_model',
           'evaluate_joint_model', 'evaluate_model', 'evaluation',
           'evaluation_tools', 'fetch_choices_and_rewards', 'fitting', 'get',
           'hierarchical', 'hierarchical_train_model', 'joint',
           'joint_train_model', 'k_fold_split', 'likelihood_ratio_test',
           'log_likelihood_experiment', 'model',
           'multi_start_hierarchical_train', 'multi_start_joint_train',
           'multi_start_train', 'negative_log_likelihood_experiment', 'parse',
           'parse_reward_matrix', 'plot_experiment_data',
           'plot_training_history', 'plotting', 'simulate', 'simulate_dataset',
           'simulate_dataset_different_params', 'simulate_dataset_jit',
           'simulate_dataset_jit_different_params', 'simulate_experiment',
           'simulate_experiment_jit', 'simulation',
           'total_negative_log_likelihood',
           'total_negative_log_likelihood_multi_group',
           'total_nll_hierarchical', 'train', 'train_model', 'utils']
